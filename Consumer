"""
Weather Producer - Milestone 1
Simulates IoT weather devices and publishes data to Kafka topic: weather.readings
"""

import json
import time
from kafka import KafkaProducer

TOPIC = "weather.readings"
BOOTSTRAP_SERVERS = ["localhost:9092"]

def load_data(file_path="data.json"):
    with open(file_path, "r") as f:
        return json.load(f)

def create_producer():
    return KafkaProducer(
        bootstrap_servers=BOOTSTRAP_SERVERS,
        value_serializer=lambda v: json.dumps(v).encode("utf-8"),
    )

if __name__ == "__main__":
    data = load_data("data.json")
    producer = create_producer()

    print(f"üöÄ Sending weather readings to Kafka topic: {TOPIC}")
    for record in data:
        producer.send(TOPIC, record)
        print("‚úÖ Sent:", record)
        time.sleep(1)  # simulate 1 reading per second

    producer.flush()
    print("üéâ Finished streaming weather data!")

vo sume
"""
Weather Consumer - Milestone 1
Consumes messages from Kafka topic: weather.readings
"""

import json
from kafka import KafkaConsumer

TOPIC = "weather.readings"
BOOTSTRAP_SERVERS = ["localhost:9092"]

def create_consumer():
    return KafkaConsumer(
        TOPIC,
        bootstrap_servers=BOOTSTRAP_SERVERS,
        auto_offset_reset="earliest",
        enable_auto_commit=True,
        group_id="weather-consumer-group",
        value_deserializer=lambda v: json.loads(v.decode("utf-8")),
    )

if __name__ == "__main__":
    consumer = create_consumer()

    print(f"üì° Listening for messages on Kafka topic: {TOPIC}")
    for message in consumer:
        print("üå§Ô∏è Received:", message.value)
